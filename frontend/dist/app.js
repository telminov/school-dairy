(function() {
  angular.module('schoolDairy', ['ngResource', 'ngSanitize', 'ngRoute', 'ngAnimate', 'ui.bootstrap', 'swUtils']).config(function($routeProvider) {
    return $routeProvider.when('/', {
      templateUrl: 'src/app/controllers/main.html',
      controller: 'MainCtrl',
      label: ''
    }).when('/schedule/', {
      templateUrl: 'src/app/controllers/schedule.html',
      controller: 'ScheduleCtrl',
      label: 'Расписание'
    });
  }).run(function($location, $rootScope, swTitle) {
    $rootScope.swTitle = swTitle;
    return $rootScope.$on('$routeChangeSuccess', function(event, current, previous) {
      var baseTitle, ref;
      baseTitle = ((ref = current.$$route) != null ? ref.label : void 0) || '';
      swTitle.setTitleBase(baseTitle);
      swTitle.setTitleStart('');
      return swTitle.setTitleEnd('');
    });
  });

}).call(this);

(function() {
  angular.module('schoolDairy').constant('config', {
    serverAddress: 'http://192.168.160.10:8000'
  });

}).call(this);

(function() {
  angular.module('schoolDairy').controller('MainCtrl', function($scope, $location) {
    return $location.path('/schedule/');
  });

}).call(this);

(function() {
  angular.module('schoolDairy').controller('ScheduleCtrl', function($scope, schedule, DayItem) {
    $scope.schedule = schedule;
    $scope.dayItems = DayItem.query();
    $scope.loading = true;
    return schedule.load().then(function() {
      return $scope.loading = false;
    }, function() {
      return $scope.loading = false;
    });
  });

}).call(this);

(function() {
  angular.module('schoolDairy').factory('DayItem', function($resource, config) {
    var url;
    url = config.serverAddress + "/day_item/:id/";
    return $resource(url);
  });

}).call(this);

(function() {
  angular.module('schoolDairy').service('schedule', function($http, config) {
    this.days = [];
    this._items = {};
    this.load = function() {
      var promise, url;
      this.days.length = 0;
      this._items = {};
      url = config.serverAddress + "/get_schedule/";
      promise = $http.get(url);
      promise.then((function(_this) {
        return function(response) {
          var day, i, item, len, ref, results;
          ref = response.data.schedule;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            day = ref[i];
            _this.days.push(day);
            results.push((function() {
              var j, len1, ref1, results1;
              ref1 = day.items;
              results1 = [];
              for (j = 0, len1 = ref1.length; j < len1; j++) {
                item = ref1[j];
                if (!this._items[day.name]) {
                  this._items[day.name] = {};
                }
                results1.push(this._items[day.name][item.day_item.id] = item);
              }
              return results1;
            }).call(_this));
          }
          return results;
        };
      })(this));
      return promise;
    };
    this.getItem = (function(_this) {
      return function(dayName, dayItem) {
        var ref;
        return (ref = _this._items[dayName]) != null ? ref[dayItem.id] : void 0;
      };
    })(this);
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb2ZmZWUiLCJjb25maWcvY29uZmlnLmNvZmZlZSIsImNvbnRyb2xsZXJzL21haW4uY29mZmVlIiwiY29udHJvbGxlcnMvc2NoZWR1bGUuY29mZmVlIiwicmVzb3VyY2VzL2RheV9pdGVtLmNvZmZlZSIsInJlc291cmNlcy9zY2hlZHVsZS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxFQUFBLE9BQU8sQ0FBQyxNQUFSLENBQWUsYUFBZixFQUE4QixDQUMxQixZQUQwQixFQUUxQixZQUYwQixFQUcxQixTQUgwQixFQUkxQixXQUowQixFQU0xQixjQU4wQixFQVExQixTQVIwQixDQUE5QixDQVdBLENBQUMsTUFYRCxDQVdRLFNBQUMsY0FBRCxHQUFBO1dBQ0osY0FFQSxDQUFDLElBRkQsQ0FFTSxHQUZOLEVBR0U7QUFBQSxNQUFBLFdBQUEsRUFBYSwrQkFBYjtBQUFBLE1BQ0EsVUFBQSxFQUFZLFVBRFo7QUFBQSxNQUVBLEtBQUEsRUFBTyxFQUZQO0tBSEYsQ0FRQSxDQUFDLElBUkQsQ0FRTSxZQVJOLEVBU0U7QUFBQSxNQUFBLFdBQUEsRUFBYSxtQ0FBYjtBQUFBLE1BQ0EsVUFBQSxFQUFZLGNBRFo7QUFBQSxNQUVBLEtBQUEsRUFBTyxZQUZQO0tBVEYsRUFESTtFQUFBLENBWFIsQ0EwQkEsQ0FBQyxHQTFCRCxDQTBCSyxTQUFDLFNBQUQsRUFBWSxVQUFaLEVBQXdCLE9BQXhCLEdBQUE7QUFDRCxJQUFBLFVBQVUsQ0FBQyxPQUFYLEdBQXFCLE9BQXJCLENBQUE7V0FFQSxVQUFVLENBQUMsR0FBWCxDQUFlLHFCQUFmLEVBQXNDLFNBQUMsS0FBRCxFQUFRLE9BQVIsRUFBaUIsUUFBakIsR0FBQTtBQUNsQyxVQUFBLGNBQUE7QUFBQSxNQUFBLFNBQUEseUNBQTJCLENBQUUsZUFBakIsSUFBMEIsRUFBdEMsQ0FBQTtBQUFBLE1BQ0EsT0FBTyxDQUFDLFlBQVIsQ0FBcUIsU0FBckIsQ0FEQSxDQUFBO0FBQUEsTUFFQSxPQUFP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RyxDQUFDLElBQUosQ0FBWixHQUF3QixFQUF4QixDQURKO2lCQUFBO0FBQUEsOEJBRUEsSUFBSSxDQUFDLE1BQU8sQ0FBQSxHQUFHLENBQUMsSUFBSixDQUFVLENBQUEsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFkLENBQXRCLEdBQTBDLEtBRjFDLENBREo7QUFBQTs7MkJBRkEsQ0FESjtBQUFBO3lCQURKO1FBQUEsRUFBQTtNQUFBLENBQUEsQ0FBQSxDQUFBLElBQUEsQ0FESixDQUxBLENBQUE7QUFnQkEsYUFBTyxPQUFQLENBakJRO0lBQUEsQ0FIWixDQUFBO0FBQUEsSUFzQkEsSUFBSSxDQUFDLE9BQUwsR0FBZSxDQUFBLFNBQUEsS0FBQSxHQUFBO2FBQUEsU0FBQyxPQUFELEVBQVUsT0FBVixHQUFBO0FBQ1gsWUFBQSxHQUFBO0FBQUEsMERBQTZCLENBQUEsT0FBTyxDQUFDLEVBQVIsVUFBN0IsQ0FEVztNQUFBLEVBQUE7SUFBQSxDQUFBLENBQUEsQ0FBQSxJQUFBLENBdEJmLENBRGlCO0VBQUEsQ0FGckIsQ0FBQSxDQUFBO0FBQUEiLCJmaWxlIjoiYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ3NjaG9vbERhaXJ5JywgW1xuICAgICduZ1Jlc291cmNlJ1xuICAgICduZ1Nhbml0aXplJ1xuICAgICduZ1JvdXRlJ1xuICAgICduZ0FuaW1hdGUnXG5cbiAgICAndWkuYm9vdHN0cmFwJ1xuXG4gICAgJ3N3VXRpbHMnXG5dKVxuXG4uY29uZmlnICgkcm91dGVQcm92aWRlcikgLT5cbiAgICAkcm91dGVQcm92aWRlclxuXG4gICAgLndoZW4oJy8nLFxuICAgICAgdGVtcGxhdGVVcmw6ICdzcmMvYXBwL2NvbnRyb2xsZXJzL21haW4uaHRtbCdcbiAgICAgIGNvbnRyb2xsZXI6ICdNYWluQ3RybCdcbiAgICAgIGxhYmVsOiAnJ1xuICAgIClcblxuICAgIC53aGVuKCcvc2NoZWR1bGUvJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAnc3JjL2FwcC9jb250cm9sbGVycy9zY2hlZHVsZS5odG1sJ1xuICAgICAgY29udHJvbGxlcjogJ1NjaGVkdWxlQ3RybCdcbiAgICAgIGxhYmVsOiAn0KDQsNGB0L/QuNGB0LDQvdC40LUnXG4gICAgKVxuXG4ucnVuICgkbG9jYXRpb24sICRyb290U2NvcGUsIHN3VGl0bGUpIC0+XG4gICAgJHJvb3RTY29wZS5zd1RpdGxlID0gc3dUaXRsZVxuXG4gICAgJHJvb3RTY29wZS4kb24gJyRyb3V0ZUNoYW5nZVN1Y2Nlc3MnLCAoZXZlbnQsIGN1cnJlbnQsIHByZXZpb3VzKSAtPlxuICAgICAgICBiYXNlVGl0bGUgPSBjdXJyZW50LiQkcm91dGU/LmxhYmVsIG9yICcnXG4gICAgICAgIHN3VGl0bGUuc2V0VGl0bGVCYXNlKGJhc2VUaXRsZSlcbiAgICAgICAgc3dUaXRsZS5zZXRUaXRsZVN0YXJ0KCcnKVxuICAgICAgICBzd1RpdGxlLnNldFRpdGxlRW5kKCcnKSIsImFuZ3VsYXIubW9kdWxlKCdzY2hvb2xEYWlyeScpXG4gICAgLmNvbnN0YW50KCdjb25maWcnLCB7XG4gICAgICAgIHNlcnZlckFkZHJlc3M6ICdodHRwOi8vMTkyLjE2OC4xNjAuMTA6ODAwMCcsXG4gICAgfSkiLCJhbmd1bGFyLm1vZHVsZSgnc2Nob29sRGFpcnknKVxuLmNvbnRyb2xsZXIgJ01haW5DdHJsJywgKCRzY29wZSwgJGxvY2F0aW9uKSAtPlxuICAgICRsb2NhdGlvbi5wYXRoKCcvc2NoZWR1bGUvJykiLCJhbmd1bGFyLm1vZHVsZSgnc2Nob29sRGFpcnknKVxuLmNvbnRyb2xsZXIgJ1NjaGVkdWxlQ3RybCcsICgkc2NvcGUsIHNjaGVkdWxlLCBEYXlJdGVtKSAtPlxuICAgICRzY29wZS5zY2hlZHVsZSA9IHNjaGVkdWxlXG4gICAgJHNjb3BlLmRheUl0ZW1zID0gRGF5SXRlbS5xdWVyeSgpXG5cbiAgICAkc2NvcGUubG9hZGluZyA9IHRydWVcbiAgICBzY2hlZHVsZS5sb2FkKCkudGhlbihcbiAgICAgICAgLT4gJHNjb3BlLmxvYWRpbmcgPSBmYWxzZVxuICAgICAgICAtPiAkc2NvcGUubG9hZGluZyA9IGZhbHNlXG4gICAgKVxuIiwiYW5ndWxhci5tb2R1bGUoJ3NjaG9vbERhaXJ5JylcblxuLmZhY3RvcnkgJ0RheUl0ZW0nLCAoJHJlc291cmNlLCBjb25maWcpIC0+XG4gICAgdXJsID0gXCIjeyBjb25maWcuc2VydmVyQWRkcmVzcyB9L2RheV9pdGVtLzppZC9cIlxuICAgIHJldHVybiAkcmVzb3VyY2UodXJsKSIsImFuZ3VsYXIubW9kdWxlKCdzY2hvb2xEYWlyeScpXG5cbi5zZXJ2aWNlICdzY2hlZHVsZScsICgkaHR0cCwgY29uZmlnKSAtPlxuICAgIHRoaXMuZGF5cyA9IFtdXG4gICAgdGhpcy5faXRlbXMgPSB7fVxuXG4gICAgdGhpcy5sb2FkID0gLT5cbiAgICAgICAgdGhpcy5kYXlzLmxlbmd0aCA9IDBcbiAgICAgICAgdGhpcy5faXRlbXMgPSB7fVxuXG4gICAgICAgIHVybCA9IFwiI3sgY29uZmlnLnNlcnZlckFkZHJlc3MgfS9nZXRfc2NoZWR1bGUvXCJcbiAgICAgICAgcHJvbWlzZSA9ICRodHRwLmdldCh1cmwpXG4gICAgICAgIHByb21pc2UudGhlbihcbiAgICAgICAgICAgIChyZXNwb25zZSkgPT5cbiAgICAgICAgICAgICAgICBmb3IgZGF5IGluIHJlc3BvbnNlLmRhdGEuc2NoZWR1bGVcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXlzLnB1c2goZGF5KVxuXG4gICAgICAgICAgICAgICAgICAgIGZvciBpdGVtIGluIGRheS5pdGVtc1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgbm90IHRoaXMuX2l0ZW1zW2RheS5uYW1lXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2l0ZW1zW2RheS5uYW1lXSA9IHt9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9pdGVtc1tkYXkubmFtZV1baXRlbS5kYXlfaXRlbS5pZF0gPSBpdGVtXG5cbiAgICAgICAgKVxuICAgICAgICByZXR1cm4gcHJvbWlzZVxuXG4gICAgdGhpcy5nZXRJdGVtID0gKGRheU5hbWUsIGRheUl0ZW0pID0+XG4gICAgICAgIHJldHVybiB0aGlzLl9pdGVtc1tkYXlOYW1lXT9bZGF5SXRlbS5pZF1cblxuICAgIHJldHVybiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==