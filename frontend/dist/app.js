(function() {
  angular.module('schoolDairy', ['ngResource', 'ngSanitize', 'ngRoute', 'ngAnimate', 'ui.bootstrap', 'toaster', 'swAuth', 'swUtils']).config(function($routeProvider) {
    return $routeProvider.when('/', {
      templateUrl: 'src/app/controllers/main.html',
      controller: 'MainCtrl',
      label: ''
    }).when('/schedule/', {
      templateUrl: 'src/app/controllers/schedule.html',
      controller: 'ScheduleCtrl',
      label: 'Расписание'
    }).when('/login/', {
      templateUrl: 'src/app/controllers/login.html',
      controller: 'AuthLoginCtrl',
      label: 'Вход'
    }).when('/logout/', {
      templateUrl: 'src/app/controllers/logout.html',
      controller: 'AuthLogoutCtrl',
      label: 'Выход'
    });
  }).config(function(authConfigProvider, config) {
    authConfigProvider.setSystemLabel('Дневник');
    authConfigProvider.setServerAddress(config.serverAddress);
    return authConfigProvider.setFreeUrls(['/', '/schedule/']);
  }).config(function($httpProvider) {
    return $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';
  }).run(function($location, $rootScope, swTitle) {
    $rootScope.swTitle = swTitle;
    return $rootScope.$on('$routeChangeSuccess', function(event, current, previous) {
      var baseTitle, ref;
      baseTitle = ((ref = current.$$route) != null ? ref.label : void 0) || '';
      swTitle.setTitleBase(baseTitle);
      swTitle.setTitleStart('');
      return swTitle.setTitleEnd('');
    });
  });

}).call(this);

(function() {
  angular.module('schoolDairy').config(function($httpProvider) {
    return $httpProvider.interceptors.push('serverErrorInterceptor');
  }).factory('serverErrorInterceptor', function($location, $q, $log) {
    return {
      responseError: function(response) {
        if (response.status === 0 || (response.status >= 500 && response.status <= 600)) {
          $log.error(response);
        }
        return $q.reject(response);
      }
    };
  });

}).call(this);

(function() {
  angular.module('schoolDairy').constant('config', {
    serverAddress: 'http://192.168.160.10:8000'
  });

}).call(this);

(function() {
  angular.module('schoolDairy').controller('MainCtrl', function($scope, $location) {
    return $location.path('/schedule/');
  });

}).call(this);

(function() {
  angular.module('schoolDairy').controller('NavBarCtrl', function($scope, $location, auth) {
    $scope.auth = auth;
    return $scope.isActive = function(viewLocation) {
      return viewLocation === $location.path();
    };
  });

}).call(this);

(function() {
  angular.module('schoolDairy').controller('ScheduleCtrl', function($scope, $log, toaster, schedule, DayItem) {
    $scope.schedule = schedule;
    $scope.dayItems = DayItem.query();
    $scope.loading = true;
    return schedule.load().then(function() {
      return $scope.loading = false;
    }, function(response) {
      $scope.loading = false;
      toaster.pop('error', 'Ошибка', 'Не удалось получить расписание занятий');
      return $log.error(response);
    });
  });

}).call(this);

(function() {
  angular.module('schoolDairy').factory('DayItem', function($resource, config) {
    var url;
    url = config.serverAddress + "/day_item/:id/";
    return $resource(url);
  });

}).call(this);

(function() {
  angular.module('schoolDairy').service('schedule', function($http, config) {
    this.days = [];
    this._items = {};
    this.load = function() {
      var promise, url;
      this.days.length = 0;
      this._items = {};
      url = config.serverAddress + "/get_schedule/";
      promise = $http.get(url);
      promise.then((function(_this) {
        return function(response) {
          var day, i, item, len, ref, results;
          ref = response.data.schedule;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            day = ref[i];
            _this.days.push(day);
            results.push((function() {
              var j, len1, ref1, results1;
              ref1 = day.items;
              results1 = [];
              for (j = 0, len1 = ref1.length; j < len1; j++) {
                item = ref1[j];
                if (!this._items[day.name]) {
                  this._items[day.name] = {};
                }
                results1.push(this._items[day.name][item.day_item.id] = item);
              }
              return results1;
            }).call(_this));
          }
          return results;
        };
      })(this));
      return promise;
    };
    this.getItem = (function(_this) {
      return function(dayName, dayItem) {
        var ref;
        return (ref = _this._items[dayName]) != null ? ref[dayItem.id] : void 0;
      };
    })(this);
  });

}).call(this);

//# sourceMappingURL=data:application/json;base64,